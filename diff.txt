diff --git a/__pycache__/ambient_noise.cpython-311.pyc b/__pycache__/ambient_noise.cpython-311.pyc
index 1266e5c..64d4ce8 100644
Binary files a/__pycache__/ambient_noise.cpython-311.pyc and b/__pycache__/ambient_noise.cpython-311.pyc differ
diff --git a/__pycache__/music.cpython-311.pyc b/__pycache__/music.cpython-311.pyc
index 8769883..652a3e7 100644
Binary files a/__pycache__/music.cpython-311.pyc and b/__pycache__/music.cpython-311.pyc differ
diff --git a/ambient_noise.py b/ambient_noise.py
deleted file mode 100644
index 5aa8369..0000000
--- a/ambient_noise.py
+++ /dev/null
@@ -1,18 +0,0 @@
-from pyo import SfPlayer
-
-"""
-Ionian - Dining Hall
-Dorian - Next to the river
-Phrygian - Top of the tower - wind
-Lydian - Garden with birds
-Mixolydian - Stables (muddy footsteps, horses)
-Aeolian - In the river
-Locrian - Dungeon (under metallic floor)
-"""
-
-class AmbientNoise():
-    def __init__(self):
-        self.noise = SfPlayer("./soundfiles/ambient_noise/birds.mp3", loop=True).out()
-        
-    def play(self):
-        self.noise.play()
\ No newline at end of file
diff --git a/main.py b/main.py
index 823a805..074dd9e 100644
--- a/main.py
+++ b/main.py
@@ -1,5 +1,5 @@
 from music import Music
-from ambient_noise import AmbientNoise
+from ambient_sounds import AmbientSounds
 from pyo import *
 
 s = Server().boot()
@@ -13,43 +13,72 @@ class Main():
         while self.input_is_valid == 0:
             match self.room_selection:
                 case "1": 
-                    self.mode = "Ionian"
+                    self.mode = "ionian"
                     self.input_is_valid = 1
                 case "2": 
-                    self.mode = "Dorian"
+                    self.mode = "dorian"
                     self.input_is_valid = 1
                 case "3": 
-                    self.mode = "Phrygian"
+                    self.mode = "phrygian"
                     self.input_is_valid = 1
                 case "4": 
-                    self.mode = "Lydian"
+                    self.mode = "lydian"
                     self.input_is_valid = 1
                 case "5": 
-                    self.mode = "Mixolydian"
+                    self.mode = "mixolydian"
                     self.input_is_valid = 1
                 case "6": 
-                    self.mode = "Aeolian"
+                    self.mode = "aeolian"
                     self.input_is_valid = 1
                 case "7": 
-                    self.mode = "Locrian"
+                    self.mode = "locrian"
                     self.input_is_valid = 1
                 case _:
                     self.room_selection = input("Please enter a number between 1 and 7:")
         
         self.music = Music(self.mode)
-        self.ambient_noise = AmbientNoise()
+        self.ambient_sounds = AmbientSounds()
         self.mixer = Mixer(chnls=2).out()
         
         # self.mixer.addInput(0, self.music.melody_reverb)
         # self.mixer.addInput(1, self.music.harmony_reverb)
         # self.mixer.addInput(2, self.music.bass_synth)
-        self.mixer.addInput(3, self.ambient_noise.noise)
-
+        self.mixer.addInput(3, self.ambient_sounds.sound1)
+        self.mixer.addInput(4, self.ambient_sounds.sound2)
         self.mixer.setAmp(0, 0, 0.1)
         self.mixer.setAmp(1, 0, 0.1)
         self.mixer.setAmp(2, 0, 0.1)
-        self.mixer.setAmp(3, 0, 0.3)
-
+        self.mixer.setAmp(3, 0, 0.5)
+        self.run_input_loop()
+        
+    def run_input_loop(self):
+        user_command = None
+        while user_command != "q":
+            user_command = input("Enter next command: ")
+            match user_command:
+                case "1": 
+                    self.music.change_mode("ionian")
+                    self.ambient_sounds.change_sound("dining_hall")
+                case "2": 
+                    self.music.change_mode("dorian")
+                    self.ambient_sounds.change_sound("river")
+                case "3": 
+                    self.music.change_mode("phrygian")
+                case "4": 
+                    self.music.change_mode("lydian")
+                case "5": 
+                    self.music.change_mode("mixolydian")
+                case "6": 
+                    self.music.change_mode("aeolian")
+                case "7": 
+                    self.music.change_mode("locrian")
+                case "q":
+                    # fade master volume
+                    pass
+                case _:
+                    self.room_selection = input("Please enter a valid command: ")
+            print(user_command)
+            
 main = Main()
 
-s.gui(locals)
+s.gui(locals)
\ No newline at end of file
diff --git a/music.py b/music.py
index 589f4b1..92c0d98 100644
--- a/music.py
+++ b/music.py
@@ -4,6 +4,7 @@
     Control interval of harmonization
     Counterpoint
     Instruments you can play from the command line
+    Potions/powerups - echoes, reversal in time
 """
 
 from pyo import *
@@ -13,19 +14,19 @@ class Music():
     def __init__(self, mode):
         self.melody_met = Metro(0.5).play()
         self.bass_met = Metro(2).play()
-        self.modes = {"Ionian": [0, 2, 4, 5, 7, 9, 11, 12, 
+        self.modes = {"ionian": [0, 2, 4, 5, 7, 9, 11, 12, 
                                  14, 16, 17, 19, 21, 23, 24],
-                      "Dorian": [0, 2, 3, 5, 7, 9, 10, 12, 
+                      "dorian": [0, 2, 3, 5, 7, 9, 10, 12, 
                                  14, 15, 17, 19, 21, 22, 24],
-                      "Phrygian": [0, 1, 3, 5, 7, 8, 10, 12, 
+                      "phrygian": [0, 1, 3, 5, 7, 8, 10, 12, 
                                    13, 15, 17, 19, 20, 22, 24],
-                      "Lydian": [0, 2, 4, 6, 7, 9, 11, 12, 
+                      "lydian": [0, 2, 4, 6, 7, 9, 11, 12, 
                                  14, 16, 18, 19, 21, 23, 24],
-                      "Mixolydian": [0, 2, 4, 5, 7, 9, 11, 12, 
+                      "mixolydian": [0, 2, 4, 5, 7, 9, 11, 12, 
                                      14, 16, 17, 19, 21, 22, 24],
-                      "Aeolian": [0, 2, 3, 5, 7, 8, 10, 12, 
+                      "aeolian": [0, 2, 3, 5, 7, 8, 10, 12, 
                                   14, 15, 17, 19, 20, 22, 24],
-                      "Locrian": [0, 1, 3, 5, 7, 8, 10, 12, 
+                      "locrian": [0, 1, 3, 5, 7, 8, 10, 12, 
                                   13, 15, 17, 19, 20, 22, 24]}
         self.current_mode = self.modes[mode]
         
@@ -199,7 +200,6 @@ class Music():
             self.play_guitar(self.melody_note)
             self.play_guitar(self.harmony_note)
             # print("playing melody")
-            pass
 
     def play_bass(self):
         # print("play_bass")
@@ -213,4 +213,7 @@ class Music():
         
     def play_guitar(self, note):
         self.guitar_samples[note][0].out()
-        print(note)  
\ No newline at end of file
+        # print(note)  
+        
+    def change_mode(self, mode):
+        self.current_mode = self.modes[mode]
\ No newline at end of file
